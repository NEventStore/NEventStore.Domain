version: 1.0.{build}
image: Visual Studio 2022
configuration: Release
assembly_info:
  patch: true
  file: '**\AssemblyInfo.*'
  assembly_version: '{version}'
  assembly_file_version: '{version}'
  assembly_informational_version: '{version}'
dotnet_csproj:
  patch: true
  file: '**\*.csproj'
  version: '{version}'
  version_prefix: '{version}'
  package_version: '{version}'
  assembly_version: '{version}'
  file_version: '{version}'
  informational_version: '{version}'
install:
- cmd: >-
    choco install gitversion.portable -y

    git submodule update --init --recursive
before_build:
- ps: >-
    # Display .NET Core version

    dotnet --version

    # Display minimal restore text

    dotnet restore ./src/NEventStore.Domain.Core.sln --verbosity m

    gitversion /l console /output buildserver /updateAssemblyInfo

    # Now we need to patch the AssemblyInfo for submodules
    gitversion .\dependencies\NEventStore /l console /updateAssemblyInfo
build:
  project: src/NEventStore.Domain.Core.sln
  verbosity: minimal
after_build:
- cmd: >-
    REM dotnet pack ./src/NEventStore.Domain/NEventStore.Domain.Core.csproj -c %CONFIGURATION% --no-build -o artifacts -p:PackageVersion=%GitVersion_NuGetVersion%


    REM use .nuspec file, projects with submodule generate wrong PackageReferences


    nuget pack ./src/.nuget/NEventStore.Domain.nuspec -properties "version=%GitVersion_NuGetVersion%;configuration=%CONFIGURATION%" -OutputDirectory artifacts
test:
  assemblies:
    except:
    - NEventStore.Persistence.AcceptanceTests.dll
    - NEventStore.dll
    - NEventStore.Domain.dll
artifacts:
- path: '**\artifacts\**\*.*'